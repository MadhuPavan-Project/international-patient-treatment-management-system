package com.cognizant.auth.exception;

import java.time.LocalDateTime;

import javax.servlet.http.HttpServletResponse;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.ServletRequestBindingException;
import org.springframework.web.bind.annotation.ExceptionHandler;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.springframework.web.bind.annotation.RestControllerAdvice;
import org.springframework.web.bind.MissingRequestHeaderException;
import feign.FeignException;
import feign.FeignException.Forbidden;
import io.jsonwebtoken.SignatureException;

/**
 * @RestControllerAdvice is a new feature of Spring that can be used to write
 *                       common code for exception handling
 */
@RestControllerAdvice
public class GlobalExceptionHandler {

//	@ExceptionHandler(ServletRequestBindingException.class)
//	@ResponseStatus(HttpStatus.FORBIDDEN)
//	public ResponseEntity<Object> handleServletRequestBindingException(ServletRequestBindingException ex) {
//		return new ResponseEntity<>(ex.getMessage(), HttpStatus.FORBIDDEN);
//	}
//
//	@ExceptionHandler(FeignException.class)
//	public ResponseEntity<Object> handleFeignStatusException(FeignException ex, HttpServletResponse response) {
//		return new ResponseEntity<>("Token is not valid", HttpStatus.INTERNAL_SERVER_ERROR);
//	}

//	@ExceptionHandler(SignatureException.class)
//	@ResponseStatus(HttpStatus.UNAUTHORIZED)
//	public ResponseEntity<Object> tokenSignatureException(SignatureException ex) {
//		return new ResponseEntity<>(ex.getMessage() + "" + LocalDateTime.now(), HttpStatus.UNAUTHORIZED);
//	}

//	@ExceptionHandler(MissingRequestHeaderException.class)
//	@ResponseStatus(HttpStatus.FORBIDDEN)
//	public ResponseEntity<Object> MissingRequestHeaderException(MissingRequestHeaderException ex) {
//		return new ResponseEntity<>( "header missing" + LocalDateTime.now(), HttpStatus.FORBIDDEN);
//	}

	@ExceptionHandler(Forbidden.class)
	@ResponseStatus(HttpStatus.FORBIDDEN)
	public ResponseEntity<Object> handleServletRequestBindingException(Forbidden ex) {
		return new ResponseEntity<>("Access denied", HttpStatus.FORBIDDEN);
	}

}